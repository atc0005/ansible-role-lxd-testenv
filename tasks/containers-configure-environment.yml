---

# vim: ts=2:sw=2:et:ft=yaml
# -*- mode: yaml; indent-tabs-mode: nil; tab-width: 2 -*-
# code: language=yaml insertSpaces=true tabSize=2

# https://github.com/atc0005/ansible-playbook-lxd-testenv
# https://github.com/atc0005/ansible-role-lxd-testenv

- name: DEBUG | Display containers configure flag for host
  debug:
    var: lxd_containers_configure
    verbosity: "2"

- name: DEBUG | Display containers configure flag for role
  debug:
    var: lxd_containers_configure
    verbosity: "2"

- name: Start SSH, set it to start at boot
  service:
    # Note: Service name differs by distro. See README for details.
    name: "{{ lxd_containers_sshd_service_name }}"
    state: started
    enabled: yes
  when:
    - python_installed | default(false)
    - lxd_containers_configure | default(false)

# https://github.com/ipspace/NetOpsWorkshop/blob/2ff7984a42bf8ed0271aa8f8eaef72140f3509b8/tools/ssh-keys/get-keys.yml#L34
# TODO: This is showing as "changed" on every run
- name: "Update hosts file in container"
  blockinfile:
    dest: "{{ lxd_containers_etc_hosts_file }}"
    marker: "# {mark} This part managed by Ansible"
    # Because we're using a separate loop here with Jinja2 templating,
    # we have duplicate the checks/guard against undefined dictionary keys
    # just as we're doing with the when/with_items pairing.
    block: |
      {% for h in groups['all'] %}
      {% if hostvars[h].ansible_default_ipv4 is defined
          and hostvars[h].ansible_default_ipv4.address is defined %}
      {{ hostvars[h].ansible_default_ipv4.address }} {{ h }}
      {% endif %}
      {% endfor %}
  when:
    - python_installed | default(false)
    - ansible_default_ipv4 is defined
    - ansible_default_ipv4['address'] is defined
    - lxd_containers_update_hosts_file | default(false)
    - lxd_containers_configure | default(false)

- name: DEBUG | Display hostvars proxy server value
  debug:
    var: lxd_containers_proxy_server
    verbosity: "2"

- name: DEBUG | Display role proxy server value
  debug:
    verbosity: "2"
    var: lxd_containers_proxy_server

- name: DEBUG | Display hostvars env file flag value
  debug:
    var: lxd_containers_add_proxy_to_etc_environment_file
    verbosity: "2"

- name: DEBUG | Display role env file flag value
  debug:
    verbosity: "2"
    var: lxd_containers_add_proxy_to_etc_environment_file


# https://askubuntu.com/questions/228530/updating-http-proxy-environment-variable
# https://askubuntu.com/questions/866161/setting-path-variable-in-etc-environment-vs-profile
# https://wiki.archlinux.org/index.php/Proxy_settings#Environment_variables
# https://unix.stackexchange.com/questions/212894/whats-the-right-format-for-the-http-proxy-environment-variable-caps-or-no-ca
# https://askubuntu.com/questions/175172/how-do-i-configure-proxies-without-gui
- name: "Apply proxy settings via environment file in container"
  blockinfile:
    dest: "{{ lxd_containers_environment_file }}"
    marker: "# {mark} This part managed by Ansible"
    block: |
      http_proxy="{{ lxd_containers_proxy_server }}"
      https_proxy="{{ lxd_containers_proxy_server }}"
      ftp_proxy="{{ lxd_containers_proxy_server }}"
      no_proxy="localhost,127.0.0.1,localaddress,.localdomain.com"
      HTTP_PROXY="{{ lxd_containers_proxy_server }}"
      HTTPS_PROXY="{{ lxd_containers_proxy_server }}"
      FTP_PROXY="{{ lxd_containers_proxy_server }}"
      NO_PROXY="localhost,127.0.0.1,localaddress,.localdomain.com"
  when:
    - python_installed | default(false)
    - lxd_containers_add_proxy_to_etc_environment_file | default(false)
    - lxd_containers_proxy_server is defined
    - lxd_containers_proxy_server != ""
    - lxd_containers_configure | default(false)

...
