---

# vim: ts=2:sw=2:et:ft=yaml
# -*- mode: yaml; indent-tabs-mode: nil; tab-width: 2 -*-
# code: language=yaml insertSpaces=true tabSize=2

# https://github.com/atc0005/ansible-playbook-lxd-testenv
# https://github.com/atc0005/ansible-role-lxd-testenv

- name: Create service group
  delegate_to: "{{ item }}"
  group:
    name: "{{ hostvars[item]['lxd_containers_service_group'] | default(lxd_containers_service_group) }}"
    state: present
    system: no
  with_items:
    - "{{ groups['all'] }}"

- name: Create service user
  delegate_to: "{{ item }}"
  user:
    name: "{{ hostvars[item]['lxd_containers_service_account'] | default(lxd_containers_service_account) }}"
    # Explicitly specify this in case the default behavior ever changes
    # Credit: @auadamw
    create_home: yes
    comment: Service account used by Ansible to configure system
    group: "{{ hostvars[item]['lxd_containers_service_group'] | default(lxd_containers_service_group) }}"
    state: present
    system: no
  with_items:
    - "{{ groups['all'] }}"

- name: "Create service account sudoers file in container"
  delegate_to: "{{ item }}"
  copy:
    content: "{{ hostvars[item]['lxd_containers_service_account'] | default(lxd_containers_service_account) }} ALL=(ALL) NOPASSWD: ALL"
    dest: "{{ hostvars[item]['lxd_containers_sudoers_include_file'] | default(lxd_containers_sudoers_include_file) }}"
    owner: root
    group: root
    mode: 0440
  with_items:
    - "{{ groups['all'] }}"

- name: Deploy SSH Public key for container management
  block:

    - name: Load SSH public key for containers from current user profile
      delegate_to: "{{ item }}"
      delegate_facts: true
      set_fact:
        lxd_host_ssh_public_key_for_containers_content: >-
          {{ lookup('file', hostvars[item]['lxd_host_ssh_public_key_for_containers'] | default(lxd_host_ssh_public_key_for_containers)) }}
      with_items:
        - "{{ groups['all'] }}"

    - name: Deploy current user SSH public key to specific users in container
      delegate_to: "{{ item[1] }}"
      delegate_facts: true
      authorized_key:
        user: "{{ item[0] }}"
        state: present
        key: "{{ hostvars[item[1]]['lxd_host_ssh_public_key_for_containers_content'] }}"
      register: authorized_key_insert_output
      with_nested:
        - [ 'root', 'ansible' ]
        - "{{ groups['all'] }}"

  rescue:

    - name: DEBUG | Display public key contents intended for container management
      delegate_to: "{{ item }}"
      debug:
        var: hostvars[item]['lxd_host_ssh_public_key_for_containers_content']
      with_items:
        - "{{ groups['all'] }}"

    - name: DEBUG | Display authorized_key insertion results
      delegate_to: "{{ item }}"
      debug:
        var: hostvars[item]['authorized_key_insert_output']
      with_items:
        - "{{ groups['all'] }}"

    - fail:
        msg: "Failed to deploy key to users in containers"

...
