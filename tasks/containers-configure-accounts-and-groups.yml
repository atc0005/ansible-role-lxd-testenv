---

# vim: ts=2:sw=2:et:ft=yaml
# -*- mode: yaml; indent-tabs-mode: nil; tab-width: 2 -*-
# code: language=yaml insertSpaces=true tabSize=2

# https://github.com/atc0005/ansible-playbook-lxd-testenv
# https://github.com/atc0005/ansible-role-lxd-testenv

- name: Create service group
  group:
    name: "{{ lxd_containers_service_group }}"
    state: present
    system: no
  when:
    - python_installed | default(false)
    - lxd_containers_service_group is defined
    - lxd_containers_service_group != ""
    - lxd_containers_configure | default(false)

- name: Create service user account
  user:
    name: "{{ lxd_containers_service_account }}"
    # Explicitly specify this in case the default behavior ever changes
    # Credit: @auadamw
    create_home: yes
    comment: Service account used by Ansible to configure system
    group: "{{ lxd_containers_service_group }}"
    state: present
    system: no
  # hostvars setting is optional, but ensure these are valid before proceeding
  when:
    - python_installed | default(false)
    - lxd_containers_service_group is defined
    - lxd_containers_service_group != ""
    - lxd_containers_service_account is defined
    - lxd_containers_service_account != ""
    - lxd_containers_configure | default(false)

- name: "Create service user account sudoers file in container"
  copy:
    content: "{{ lxd_containers_service_account }} ALL=(ALL) NOPASSWD: ALL"
    dest: "{{ lxd_containers_sudoers_include_file }}"
    owner: root
    group: root
    mode: 0440
  when:
    - python_installed | default(false)
    - lxd_containers_service_account is defined
    - lxd_containers_service_account != ""
    - lxd_containers_sudoers_include_file is defined
    - lxd_containers_sudoers_include_file != ""
    - lxd_containers_configure | default(false)

- name: Deploy SSH Public key for container management
  block:

    - name: Retrieve SSH public key for containers
      set_fact:
        lxd_host_ssh_public_key_for_containers_content: >-
          {{ lookup('file', lxd_host_ssh_public_key_for_containers) }}

    - name: Deploy SSH public key to root user in container
      authorized_key:
        user: "root"
        state: present
        key: "{{ lxd_host_ssh_public_key_for_containers_content }}"
      register: authorized_key_insert_output

    - name: Deploy SSH public key to service account in container
      authorized_key:
        user: "{{ lxd_containers_service_account }}"
        state: present
        key: "{{ lxd_host_ssh_public_key_for_containers_content }}"
      register: authorized_key_insert_output

  rescue:

    - name: DEBUG | Display public key contents intended for container management
      debug:
        var: lxd_host_ssh_public_key_for_containers_content

    - name: DEBUG | Display authorized_key insertion results
      debug:
        var: authorized_key_insert_output

    - fail:
        msg: "Failed to deploy key to users in containers"

  when:
    - python_installed | default(false)
    - lxd_containers_service_account is defined
    - lxd_containers_service_account != ""
    - lxd_host_ssh_public_key_for_containers is defined
    - lxd_host_ssh_public_key_for_containers != ""
    - lxd_containers_configure | default(false)

...
