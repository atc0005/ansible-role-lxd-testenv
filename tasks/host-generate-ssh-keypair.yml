---

# vim: ts=2:sw=2:et:ft=yaml
# -*- mode: yaml; indent-tabs-mode: nil; tab-width: 2 -*-
# code: language=yaml insertSpaces=true tabSize=2

# https://github.com/atc0005/ansible-playbook-lxd-testenv
# https://github.com/atc0005/ansible-role-lxd-testenv

- name: Run ssh-keygen command, force display results in case of error
  block:

    - name: DEBUG | Display ssh-keygen command used to generate key for container use
      delegate_to: localhost
      debug:
        verbosity: 2
        msg: >
          ssh-keygen
          -q
          -t ed25519
          -f {{ lxd_host_ssh_private_key_for_containers }}
          -C 'Key pair used for LXD container management'
          -N ''

    # https://serverfault.com/questions/910071/how-to-generate-host-ssh-keys-via-ansible
    - name: Generate key for test environment container use
      delegate_to: localhost
      # Run task only once; this key is used with all test containers
      run_once: true
      command : >
        ssh-keygen
        -q
        -t ed25519
        -f '{{ lxd_host_ssh_private_key_for_containers }}'
        -C 'Key pair used for LXD container management'
        -N ''
      args:
        creates: "{{ lxd_host_ssh_private_key_for_containers }}"
      register: keygen_results

  rescue:

    - name: DEBUG | Display ssh-keygen command results
      delegate_to: localhost
      debug:
        var: keygen_results

    - fail:
        msg: >
          Failed to generate key pair for container managment.
          See earlier debug output for details.

  # This is set as a default var, so the user would have to intentionally
  # reset the value, but even so try to guard against it.
  when:
    - lxd_host_ssh_private_key_for_containers is defined
    - lxd_host_ssh_private_key_for_containers != ""

...
